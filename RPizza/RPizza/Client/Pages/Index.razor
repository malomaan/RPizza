@page "/"
@inject HttpClient HttpClient;


<div class="main">
    <ul class="pizza-cards">
        @if (Specials != null)
        {
            foreach (var Special in Specials)
            {
                <li @onclick="@(() => ShowConfigurePizzaGialog(Special))" style="background-image:url('@Special.ImageUrl')">
                    <div class="pizza-info">
                        <span class="title">@Special.Name</span>
                        @Special.Description
                        <span class="price">
                            @Special.GetFormattedBasePrice()
                        </span>
                    </div>
                </li>
            }
        }
    </ul>
</div>

@if (ShowingConfigureGialog)
{
    <ConfigurePizzaDialog Pizza="ConfiguringPizza" />
}



@code{

    /// <summary>
    /// Variable que llena la pizza
    /// </summary>
    List<PizzaSpecial> Specials;

    Pizza ConfiguringPizza;
    bool ShowingConfigureGialog;


    /// <summary>
    /// Metodo que se carga cuando inicializa el Componente
    /// </summary>
    /// <returns></returns>
    protected async override Task OnInitializedAsync()
    {
        Specials = await HttpClient.GetFromJsonAsync<List<PizzaSpecial>>("special");
    }

    void ShowConfigurePizzaGialog(PizzaSpecial special)
    {
        ConfiguringPizza = new Pizza()
        {
            Special = special,
            SpecialId = special.Id,
            Size = Pizza.DefaultSize,
            Toppings = new List<PizzaTopping>()
        };
        ShowingConfigureGialog = true;
    }
}


}